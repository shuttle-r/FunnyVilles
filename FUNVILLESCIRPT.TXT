



--[[
  GUI MADE BY SPDM TEAM
  i borrow the gui because it's looks cool
  
  by shuFEL
--]]

local Script_Title = "Error: failed to load script title"





-- Instances:
local Segs = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Intro = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local Logo = Instance.new("ImageButton")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")
local Title = Instance.new("TextLabel")
local Menu = Instance.new("ScrollingFrame")
local UIListLayout = Instance.new("UIListLayout")
local Toggle = Instance.new("ImageButton")
local ToggleText = Instance.new("TextBox")
local UICorner_3 = Instance.new("UICorner")
local Enabled = Instance.new("Frame")
local EnabledText = Instance.new("TextBox")
local UIAspectRatioConstraint_2 = Instance.new("UIAspectRatioConstraint")
local UICorner_4 = Instance.new("UICorner")
local Check = Instance.new("Frame")
local CheckText = Instance.new("TextBox")
local UIAspectRatioConstraint_3 = Instance.new("UIAspectRatioConstraint")
local UICorner_5 = Instance.new("UICorner")
local Name = Instance.new("TextLabel")
local UIGradient = Instance.new("UIGradient")
local Button = Instance.new("ImageButton")
local UICorner_6 = Instance.new("UICorner")
local Name_2 = Instance.new("TextLabel")
local UIGradient_2 = Instance.new("UIGradient")
local tab = Instance.new("Frame")
local Close = Instance.new("TextButton")
local ComboElem = Instance.new("ImageButton")
local UICorner_7 = Instance.new("UICorner")
local Name_3 = Instance.new("TextLabel")
local UIGradient_3 = Instance.new("UIGradient")
local Img = Instance.new("TextLabel")
local UIAspectRatioConstraint_4 = Instance.new("UIAspectRatioConstraint")
local ComboBox = Instance.new("ImageButton")
local UICorner_8 = Instance.new("UICorner")
local Name_4 = Instance.new("TextLabel")
local UIGradient_4 = Instance.new("UIGradient")
local Img_2 = Instance.new("TextLabel")
local UIAspectRatioConstraint_5 = Instance.new("UIAspectRatioConstraint")
local IntroText = Instance.new("TextLabel")
--Properties:

Segs.Name = "Segs"
Segs.Enabled = true
Segs.ResetOnSpawn = true
Segs.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Segs.DisplayOrder = 999999999

Main.Name = "Main"
Main.Parent = Segs
Main.Active = true
Main.Draggable = true
Main.AnchorPoint = Vector2.new(0.5, 0.5)
Main.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0.5, 0, -0.2, 0) --UDim2.new(0.5, 0, 0.5, 0)
Main.Size = UDim2.new(0.3, 0, 0.3, 0)

UICorner.CornerRadius = UDim.new(0.1, 0)
UICorner.Parent = Main

Intro.Name = "Intro"
Intro.Parent = Main
Intro.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Intro.ClipsDescendants = true
Intro.Size = UDim2.new(1, 0, 1, 0)
Intro.ZIndex = 2




UICorner_2.CornerRadius = UDim.new(0.1, 0)
UICorner_2.Parent = Intro

Logo.Parent = Intro
Logo.AnchorPoint = Vector2.new(0.5, 0.5)
Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Logo.BackgroundTransparency = 1
Logo.BorderSizePixel = 0
Logo.Position = UDim2.new(0.5, 0, 0.5, 0)
Logo.Size = UDim2.new(0.75, 0, 0.75, 0)
Logo.ZIndex = 2
Logo.Image = "rbxassetid://475456048"
Logo.ScaleType = Enum.ScaleType.Fit
Logo.Active = false




UIAspectRatioConstraint.Parent = Logo

Title.Name = "Title"
Title.Parent = Main
Title.AnchorPoint = Vector2.new(1, 0)
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1
Title.BorderSizePixel = 0
Title.Position = UDim2.new(0.975, 0, 0.075, 0)
Title.Size = UDim2.new(0.85, 0, 0.155, 0)
Title.Font = Enum.Font.TitilliumWeb
Title.FontFace = Font.new("rbxasset://fonts/families/TitilliumWeb.json", Enum.FontWeight.Bold)
Title.RichText = true
Title.Text = Script_Title
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextScaled = true
Title.TextSize = 14
Title.TextWrapped = true
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.TextYAlignment = Enum.TextYAlignment.Center
local words = {"Funville | You are single","Funville | Mai is perfect waifu no cap","Funville | you are cute","Funville | bro what?","Funville | You lied in April bro :(","Funville | Woah! you see that?","Funville | big black man"} --You can add more words but it should be a string
Title.Text = words[math.random(1,#words)]


Menu.Name = "Menu"
Menu.Parent = Main
Menu.Active = true
Menu.AnchorPoint = Vector2.new(0.5, 1)
Menu.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Menu.BackgroundTransparency = 1
Menu.AutomaticCanvasSize = Enum.AutomaticSize.Y
Menu.BorderSizePixel = 0
Menu.Position = UDim2.new(0.5, 0, 0.95, 0)
Menu.Size = UDim2.new(0.95, 0, 0.65, 0)
Menu.CanvasSize = UDim2.new(0, 0, 0, 0)
Menu.ScrollBarImageColor3 = Color3.fromRGB(255, 255, 255)
Menu.ScrollBarThickness = Menu.AbsoluteSize.X/25

UIListLayout.Parent = Menu
--UIListLayout.Padding = UDim.new(0.025, 0)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

Toggle.Name = "Toggle"
Toggle.Visible = false
--Toggle.Parent = Segs
Toggle.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
Toggle.Size = UDim2.new(0.95, 0, 0, 50)
UICorner_3.CornerRadius = UDim.new(0.25, 0)
UICorner_3.Parent = Toggle




Enabled.Name = "Enabled"
Enabled.Parent = Toggle
Enabled.AnchorPoint = Vector2.new(1, 0.5)
Enabled.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Enabled.Position = UDim2.new(0.975, 0, 0.5, 0)
Enabled.Size = UDim2.new(0.75, 0, 0.75, 0)
UIAspectRatioConstraint_2.Parent = Enabled

UICorner_4.CornerRadius = UDim.new(0.3, 0)
UICorner_4.Parent = Enabled



Check.Name = "Check"
Check.Parent = Enabled
Check.AnchorPoint = Vector2.new(0.5, 0.5)
Check.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
Check.Position = UDim2.new(0.5, 0, 0.5, 0)
Check.Size = UDim2.new(0.65, 0, 0.65, 0)
UIAspectRatioConstraint_3.Parent = Check

UICorner_5.CornerRadius = UDim.new(0.3, 0)
UICorner_5.Parent = Check



Name.Name = "Name"
Name.Parent = Toggle
Name.AnchorPoint = Vector2.new(0, 0.5)
Name.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name.BackgroundTransparency = 1
Name.BorderSizePixel = 0
Name.Position = UDim2.new(0.05, 0, 0.5, 0)
Name.Size = UDim2.new(0.75, 0, 0.8, 0)
Name.Font = Enum.Font.TitilliumWeb
Name.Text = "Script"
Name.TextColor3 = Color3.fromRGB(255, 255, 255)
Name.TextScaled = true
Name.TextSize = 14
Name.TextWrapped = true
Name.TextXAlignment = Enum.TextXAlignment.Left
Name.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient.Parent = Toggle

Button.Name = "Button"
--Button.Parent = Segs
Button.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
Button.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_6.CornerRadius = UDim.new(0.25, 0)
UICorner_6.Parent = Button

Name_2.Name = "Name"
Name_2.Parent = Button
Name_2.AnchorPoint = Vector2.new(0, 0.5)
Name_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_2.BackgroundTransparency = 1
Name_2.BorderSizePixel = 0
Name_2.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_2.Size = UDim2.new(0.95, 0, 0.82, 0)
Name_2.Font = Enum.Font.TitilliumWeb
Name_2.Text = "Enabled"
Name_2.TextColor3 = Color3.fromRGB(255, 255, 255)
Name_2.TextScaled = true
Name_2.TextSize = 14
Name_2.TextWrapped = true
Name_2.TextXAlignment = Enum.TextXAlignment.Left
Name_2.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_2.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_2.Parent = Button

tab.Name = "Tab"
tab.Visible = false
--tab.Parent = Segs
tab.BackgroundTransparency = 1
tab.Size = UDim2.new(0.95, 0, 0.025, 0)

Close.Name = "Close"
Close.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Close.BackgroundTransparency = 1
Close.BorderSizePixel = 0
Close.Position = UDim2.new(0.8, 0, 0.1, 0)
Close.Size = UDim2.new(0.15, 0, 0.125, 0)
Close.Font = Enum.Font.FredokaOne
Close.Text = "X"
Close.TextColor3 = Color3.fromRGB(255, 0, 0)
Close.TextScaled = true
Close.TextSize = 14
Close.TextWrapped = true
Close.TextXAlignment = Enum.TextXAlignment.Right
Close.Parent = Main

ComboElem.Name = "ComboElem"
ComboElem.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
ComboElem.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_7.CornerRadius = UDim.new(0.25, 0)
UICorner_7.Parent = ComboElem

Name_3.Name = "Name"
Name_3.Parent = ComboElem
Name_3.AnchorPoint = Vector2.new(0, 0.5)
Name_3.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_3.BackgroundTransparency = 1
Name_3.BorderSizePixel = 0
Name_3.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_3.Size = UDim2.new(0.75, 0, 0.8, 0)
Name_3.Font = Enum.Font.TitilliumWeb
Name_3.Text = "Enabled"
Name_3.TextColor3 = Color3.fromRGB(255, 0, 0)
Name_3.TextScaled = true
Name_3.TextSize = 14
Name_3.TextWrapped = true
Name_3.TextXAlignment = Enum.TextXAlignment.Left
Name_3.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_3.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_3.Rotation = 180
UIGradient_3.Parent = ComboElem

Img.Name = "Img"
Img.Parent = ComboElem
Img.AnchorPoint = Vector2.new(1, 0.5)
Img.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Img.BackgroundTransparency = 1
Img.BorderSizePixel = 0
Img.Position = UDim2.new(0.975, 0, 0.5, 0)
Img.Rotation = 90
Img.Size = UDim2.new(0.75, 0, 0.75, 0)
Img.Font = Enum.Font.FredokaOne
Img.Text = "^"
Img.TextColor3 = Color3.fromRGB(255, 255, 255)
Img.TextScaled = true
Img.TextSize = 14
Img.TextWrapped = true

UIAspectRatioConstraint_4.Parent = Img

ComboBox.Name = "ComboBox"
ComboBox.BackgroundColor3 = Color3.fromRGB(55, 55, 55)
ComboBox.Size = UDim2.new(0.95, 0, 0, 50)

UICorner_8.CornerRadius = UDim.new(0.25, 0)
UICorner_8.Parent = ComboBox

Name_4.Name = "Name"
Name_4.Parent = ComboBox
Name_4.AnchorPoint = Vector2.new(0, 0.5)
Name_4.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Name_4.BackgroundTransparency = 1.000
Name_4.BorderSizePixel = 0
Name_4.Position = UDim2.new(0.05, 0, 0.5, 0)
Name_4.Size = UDim2.new(0.75, 0, 0.8, 0)
Name_4.Font = Enum.Font.TitilliumWeb
Name_4.Text = "Enabled"
Name_4.TextColor3 = Color3.fromRGB(255, 255, 255)
Name_4.TextScaled = true
Name_4.TextSize = 14
Name_4.TextWrapped = true
Name_4.TextXAlignment = Enum.TextXAlignment.Left
Name_4.TextYAlignment = Enum.TextYAlignment.Bottom

UIGradient_4.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(180, 180, 180))}
UIGradient_4.Parent = ComboBox

Img_2.Name = "Img"
Img_2.Parent = ComboBox
Img_2.AnchorPoint = Vector2.new(1, 0.5)
Img_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Img_2.BackgroundTransparency = 1
Img_2.BorderSizePixel = 0
Img_2.Rotation = 180
Img_2.Position = UDim2.new(0.975, 0, 0.5, 0)
Img_2.Size = UDim2.new(0.75, 0, 0.75, 0)
Img_2.Font = Enum.Font.FredokaOne
Img_2.Text = "^"
Img_2.TextColor3 = Color3.fromRGB(255, 0, 0)
Img_2.TextScaled = true
Img_2.TextSize = 14
Img_2.TextWrapped = true

UIAspectRatioConstraint_5.Parent = Img_2

-- SCRIPT

local TweenService = game:GetService("TweenService")
Close.MouseButton1Click:Connect(function()
	Logo.Active = true
	spawn(function()
	wait(0.4)
	Title.Text = words[math.random(1,#words)]
  end)
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()

	task.wait(0.3)
	Logo:TweenSizeAndPosition(
		UDim2.fromScale(0.75, 0.75),
		UDim2.fromScale(0.5, 0.5),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	Main:TweenSize(
		UDim2.fromScale(0.1, 0.175),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	for _, obj in pairs(Main:GetChildren()) do
		if obj:IsA("GuiObject") and obj ~= Intro then
			obj.Visible = false
		end
	end

	TweenService:Create(Logo, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageTransparency = 0.8}):Play()
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
	TweenService:Create(Main, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0.8}):Play()
	wait(0.1)
	TweenService:Create(Logo, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageTransparency = 0.8}):Play()
end)
Logo.MouseButton1Click:Connect(function()
	Logo.Active = false
	TweenService:Create(Logo, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {ImageTransparency = 0}):Play()
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()
	TweenService:Create(Main, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()

	task.wait(0.3)
	Main:TweenSize(
		UDim2.fromScale(0.3, 0.3),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	task.wait(0.3)
	Logo:TweenSizeAndPosition(
		UDim2.fromScale(0.175, 0.175),
		UDim2.fromScale(0.075, 0.15),
		Enum.EasingDirection.Out,
		Enum.EasingStyle.Quad,
		0.25, true, nil
	)

	for _, obj in pairs(Main:GetChildren()) do
		if obj:IsA("GuiObject") and obj ~= Intro then
			obj.Visible = true
		end
	end

	task.wait(0.3)
	TweenService:Create(Intro, TweenInfo.new(0.25, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()
end)



local function uiparent()
	local success, parent = pcall(function()
		return gethui()
	end)

	if not success then
		return game:GetService("CoreGui")
	end

	return parent
end

local success, err = pcall(function()
	Segs.Parent = uiparent()
end)

if not success then
	Segs.Parent = game:GetService("Players").LocalPlayer.PlayerGui
end

local element_height = 50*Menu.AbsoluteSize.Y/210
local elements = 0

local function addSpace(parent)
	local space = tab:Clone()
	space.Parent = parent
	space.LayoutOrder = elements
	space.Visible = true

elements = elements + 1
end

local function addToggle(name, funct, enabled, ...)
	local newTog = Toggle:Clone()
	local args = {...}

	newTog.MouseButton1Click:Connect(function()
		enabled = not enabled
		newTog:WaitForChild("Enabled"):WaitForChild("Check").Visible = enabled
		funct(enabled, unpack(args))
	end)

	newTog:WaitForChild("Enabled"):WaitForChild("Check").Visible = enabled
	newTog:WaitForChild("Name").Text = name

	newTog.Size = UDim2.new(0.95, 0, 0, element_height) -- Y1 = 50 : Y2 = X
	newTog.Name = name
	newTog.Parent = Menu
	newTog.LayoutOrder = elements
	newTog.Visible = true

	elements = elements + 1
	addSpace(Menu)

	return newTog
end-- end

local function addButton(name, funct, ...)
	local newBut = Button:Clone()
	local args = {...}

	newBut.MouseButton1Click:Connect(function()
		funct(unpack(args))
	end)

	newBut:WaitForChild("Name").Text = name
	newBut.Size = UDim2.new(0.95, 0, 0, element_height)
	newBut.Name = name
	newBut.Parent = Menu
	newBut.LayoutOrder = elements
	newBut.Visible = true

	elements = elements + 1
	addSpace(Menu)

	return newBut
end

local function addComboBox(text, options, funct, ...) -- ADD CUSTOM ELEMENT INSTEAD
	local newCombo = ComboBox:Clone()
	local enabled = false
	local elems = {}
	local args = {...}

	local function setBoxState()
		newCombo:WaitForChild("Img").Rotation = enabled and 0 or 180
		for _, elem in ipairs(elems) do
			elem.Visible = enabled
		end
	end

	newCombo.MouseButton1Click:Connect(function()
		enabled = not enabled
		setBoxState()
	end)

	newCombo:WaitForChild("Name").Text = text .. ": " .. (#options > 0 and options[1] or "")
	newCombo.Size = UDim2.new(0.95, 0, 0, element_height)
	newCombo.Name = #options > 0 and options[1] or ""
	newCombo.Parent = Menu
	newCombo.LayoutOrder = elements
	newCombo.Parent = Menu
	newCombo.Visible = true

	elements = elements + 1
	addSpace(Menu)

	for _, name in ipairs(options) do
		local newElem = ComboElem:Clone()
		table.insert(elems, newElem)

		newElem.MouseButton1Click:Connect(function()
			newCombo:WaitForChild("Name").Text = text .. ": " .. name
			enabled = false
			setBoxState()

			funct(name, unpack(args))
		end)

		newElem:WaitForChild("Name").Text = name
		newElem.Size = UDim2.new(0.95, 0, 0, element_height)
		newElem.Name = name
		newElem.Parent = Menu
		newElem.LayoutOrder = elements
		newElem.Visible = false

		elements = elements +	1
		addSpace(Menu)
	end

	return newCombo
end

-- Actual Script
local other
other = addButton("CREATED BY: shuFEL", function()
return
end)
other:WaitForChild("Name").TextColor = BrickColor.new(0,255,0)

local other
other = addButton("                                               ", function()
return
end)

local autobanner
autobanner = addButton("Autofarm", function()
return
end)
autobanner:WaitForChild("Name").TextColor = BrickColor.new(0,255,0)

local autofarmingsec
autofarmingsec = addToggle("Auto fish - um automatically do cliking idk", function() 
  if autofish == true then
    autofish = false
    else
      autofish = true
  end
  
while autofish == true do 
  wait() 
game:GetService("ReplicatedStorage").FishInput:FireServer() 
game:GetService("ReplicatedStorage").FishInput:FireServer()
end

if autofish == false then
  return
end
  
end, false)



local autofarmingcle
autofarmingcle = addToggle("clean windows - free money", function() 
  if autofishs == true then
    autofishs = false
    else
      autofishs = true
  end
  
if autofishs == true then
  _G.CleanWin = game:GetService("RunService").heartbeat:Connect(function()
   game:GetService("ReplicatedStorage").CleanWindow:FireServer()
  end)
end

if autofishs == false then
  _G.CleanWin:Disconnect()
end
  
end, false)


local gunship
gunship = addButton("Gun shop", function()
return
end)
gunship:WaitForChild("Name").TextColor = BrickColor.new(255,0,0)

local crow
crow = addButton("Buy crowbar", function()-- Script generated by SimpleSpy - credits to exx#9394
local args = {
    [1] = "Crowbar"
}

game:GetService("ReplicatedStorage").PurchaseItem:FireServer(unpack(args))
end)

local gun
gun = addButton("Buy gun", function()-- Script generated by SimpleSpy - credits to exx#9394-- Script generated by SimpleSpy - credits to exx#9394
local args = {
    [1] = "Colt 45"
}

game:GetService("ReplicatedStorage").PurchaseItem:FireServer(unpack(args))
end)

local hamm
hamm = addButton("Buy hammer", function()-- Script generated by SimpleSpy - credits to exx#9394-- Script generated by SimpleSpy - credits to exx#9394-- Script generated by SimpleSpy - credits to exx#9394
local args = {
    [1] = "SledgeHammer"
}

game:GetService("ReplicatedStorage").PurchaseItem:FireServer(unpack(args))
end)


local SwordStuff
SwordStuff = addButton("annoying stuff", function()
return
end)
SwordStuff:WaitForChild("Name").TextColor = BrickColor.new(0,0,255)

local KillCrow
KillCrow = addToggle("Stroller auto - autoclick the Stroller", function()

if KillCrows == true then
  KillCrows = false
  else
  KillCrows = true
end

while KillCrows == true do
  wait()
local ToolName = "Stroller"

-- Function to find the tool in the LocalPlayer's backpack or character

local function findTool(toolName)
    local backpack = game.Players.LocalPlayer:WaitForChild("Backpack")
    local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
    
    -- Check if the tool is already in the backpack
    local tool = backpack:FindFirstChild(toolName)
    if tool then
        return tool
    end
    
    -- Check if the tool is already equipped on the character
    tool = character:FindFirstChild(toolName)
    if tool then
        return tool
    end
    
    -- Tool not found
    return nil
end

-- Function to equip or unequip the tool on the LocalPlayer's character

local function toggleTool(tool)
    local backpack = game.Players.LocalPlayer:WaitForChild("Backpack")
    local character = game.Players.LocalPlayer.Character or game.Players.LocalPlayer.CharacterAdded:Wait()
    
    -- Check if the tool is already equipped on the character
    local equippedTool = character:FindFirstChild(tool.Name)
    if equippedTool then
        -- Unequip the tool
        equippedTool.Parent = backpack
    else
        -- Unequip any previously equipped tool
        local prevTool = character:FindFirstChildOfClass("Tool")
        if prevTool then
            prevTool.Parent = backpack
        end
        
        -- Equip the tool
        tool.Parent = character
        
        -- Optional: You can also select the tool for use immediately
        game.Players.LocalPlayer.Character.Humanoid:EquipTool(tool)
    end
end

-- Find the tool
local tool = findTool(ToolName)
if tool then
    -- Equip or unequip the tool
    toggleTool(tool)
end
end

if KillCrows == false then
  return
end
  end)



local Movemento
Movemento = addButton("MOVEMENT", function()
return
end)
Movemento:WaitForChild("Name").TextColor = BrickColor.new(255,0,0)


local toggleBtn
local speeds = 1
toggleBtn = addToggle("Speed: " .. speeds, function()
local hrp = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")	
if speed == true then
  speed = false
  else
  speed = true
end

while speed == true do
  pcall(function()
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * speeds
 end)
wait()
end 


  if speed == false then
  pcall(function()
  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * 0
  end)
wait()
end 



end, false)

local incraseBtn
incraseBtn = addButton("Increase speed", function()
speeds = speeds + 1
toggleBtn:WaitForChild("Name").Text = "Speed: " .. speeds
end)

local decraseBtn
decraseBtn = addButton("Decrase speed", function()
  if speeds > 1 then
speeds = speeds - 1
end
toggleBtn:WaitForChild("Name").Text = "Speed: " .. speeds
end)


local infjumps
infjumps = addToggle("Infinite jump", function()
if infjump == true then
  infjump = false
  else
  infjump = true
end
game:GetService("UserInputService").JumpRequest:connect(function()
  if infjump == true then
    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
  end
  if infjump == false then
  return
  end
end)
end, false)



local SwordStuffj
SwordStuffj = addButton("Reach", function()
return
end)
SwordStuffj:WaitForChild("Name").TextColor = BrickColor.new(255,0,0)

 
local hitboxez
local reachsize = 20
local dmgEnabled = true
local multiplier = 15
local visualizerEnabled = true
local reachType = "Sphere"

local visualizer = Instance.new("Part")
visualizer.Color = Color3.new(1, 0.968627, 0)
visualizer.Transparency = VisualizerTransparencyAmount
visualizer.Anchored = true
visualizer.CanCollide = false
visualizer.CastShadow = false
visualizer.Size = Vector3.new(0.5,0.5,0.5)
visualizer.BottomSurface = Enum.SurfaceType.Glue
visualizer.TopSurface = Enum.SurfaceType.Glue
local TweenService = game:GetService("TweenService")
local part = visualizer
local TweeningInformation = TweenInfo.new(
	1,
	Enum.EasingStyle.Quad,
	Enum.EasingDirection.Out,
	753475938457843579348573,
	true,
	0
)
 
local PartProperties = {
	Color = Color3.fromRGB(255,0,0)
}
 
local Tween = TweenService:Create(part,TweeningInformation,PartProperties)
local White = Color3.fromRGB(1, 1, 1)
local config = "Reset"
local colorrvalue = 1
local colorgvalue = 1
local colorbvalue = 1
local plr = game.Players.LocalPlayer
local function onHit(hit,handle)
	local victim = hit.Parent:FindFirstChildOfClass("Humanoid")
	if victim and victim.Parent.Name ~= game.Players.LocalPlayer.Name then
		if dmgEnabled then
 
			for _,v in pairs(hit.Parent:GetChildren()) do
				if v:IsA("BasePart") then
					for i = 1, multiplier do
						firetouchinterest(v,handle,0)
						firetouchinterest(v,handle,1)
						firetouchinterest(v,handle,0)
					end
				end
			end
		else
			firetouchinterest(hit,handle,0)
			firetouchinterest(hit,handle,1)
		end
	end
end

local function getWhiteList()
	local wl = {}
	for _,v in pairs(game.Players:GetPlayers()) do
		if v ~= plr then
			local char = v.Character
			if char then
				for _,q in pairs(char:GetChildren()) do
					if q:IsA("BasePart") then
						table.insert(wl,q)
					end
				end
			end
		end
	end
	return wl
end
hitboxez = addButton("Reach size: " .. reachsize, function()
return
end)
local EnableHit
EnableHit = addToggle("Enabled reach - reach sword[skidded]", function()
if Reacheds == true then
  Reacheds = false
  else
  Reacheds = true
end

while Reacheds == true do
  wait()
local s = plr.Character and plr.Character:FindFirstChildOfClass("Tool")
	if not s then visualizer.Parent = nil end
	if s then
		local handle = s:FindFirstChild("Handle") or s:FindFirstChildOfClass("Part")
		if handle then
			if visualizerEnabled then
				visualizer.Parent = workspace
			else
				visualizer.Parent = nil
			end
			local reach = tonumber(reachsize)
 
			if reach then
				if reachType == "Sphere" then
					if config == "CWare Config" then
						visualizer.Shape = Enum.PartType.Ball
						visualizer.Material = Enum.Material.Plastic
						visualizer.Color = Color3.new(1, 0, 0)
						visualizer.Transparency = 0.005459344392
						visualizer.Size = Vector3.new(reach,reach,reach)
						visualizer.CFrame = handle.CFrame
						visualizer.CastShadow = false
						visualizer.Name = math.random()
					elseif config == "Reset" then
						visualizer.Shape = Enum.PartType.Ball
						visualizer.Material = Enum.Material.ForceField
						visualizer.Color = Color3.new(1, 0.933333, 0)
						visualizer.Transparency = VisualizerTransparencyAmount
						visualizer.Size = Vector3.new(reach,reach,reach)
						visualizer.CFrame = handle.CFrame
						visualizer.CastShadow = false
						visualizer.Name = math.random()
					elseif config == "Blizzy Config" then
						visualizer.Shape = Enum.PartType.Ball
						visualizer.Material = Enum.Material.SmoothPlastic
						visualizer.Color = Color3.new(0.00784314, 0.454902, 1)
						visualizer.Transparency = 0.4
						visualizer.Size = Vector3.new(reach,reach,reach)
						visualizer.CFrame = handle.CFrame
						visualizer.CastShadow = false
						visualizer.Name = math.random()
					elseif config == "Sebs Config" then
						visualizer.Shape = Enum.PartType.Ball
						visualizer.Material = Enum.Material.Asphalt
						visualizer.Color = Color3.new(0.105882, 0.745098, 0.0313725)
						visualizer.Transparency = 0.8
						visualizer.Size = Vector3.new(reach,reach,reach)
						visualizer.CFrame = handle.CFrame
						visualizer.CastShadow = false
						visualizer.Name = math.random()
					end
					for _,v in pairs(game.Players:GetPlayers()) do
						local hrp = v.Character and v.Character:FindFirstChild("HumanoidRootPart")
						if hrp and handle then
							local mag = (hrp.Position-handle.Position).magnitude
							if mag <= reach then
								onHit(hrp,handle)
							end
						end
					end
				elseif reachType == "Block" then
					local origin = (handle.CFrame*CFrame.new(0,0,-2)).p
					local ray = Ray.new(origin,handle.CFrame.lookVector*-reach)
					local p,pos = workspace:FindPartOnRayWithWhitelist(ray,getWhiteList())
					visualizer.Shape = Enum.PartType.Block
					visualizer.Size = Vector3.new(reach,reach,reach)
					visualizer.CFrame = handle.CFrame
					visualizer.CastShadow = false
					visualizer.Name = math.random()
					visualizer.Color = Color3.new(colorrvalue,colorgvalue,colorbvalue)
					visualizer.Transparency = VisualizerTransparencyAmount
					if config == "CWare Config" then
						visualizer.Shape = Enum.PartType.Block
						visualizer.Material = Enum.Material.Plastic
						visualizer.Color = Color3.new(1, 0, 0)
						visualizer.Transparency = 0
						visualizer.Size = Vector3.new(reach,reach,reach)
						visualizer.CFrame = handle.CFrame
						visualizer.CastShadow = false
						visualizer.Name = math.random()
					elseif config == "Reset" then
						visualizer.Shape = Enum.PartType.Block
						visualizer.Material = Enum.Material.ForceField
						visualizer.Color = Color3.new(0.984314, 1, 0)
						visualizer.Transparency = VisualizerTransparencyAmount
						visualizer.Size = Vector3.new(reach,reach,reach)
						visualizer.CFrame = handle.CFrame
						visualizer.CastShadow = false
						visualizer.Name = math.random()
					elseif config == "Blizzy Config" then
						visualizer.Shape = Enum.PartType.Block
						visualizer.Material = Enum.Material.SmoothPlastic
						visualizer.Color = Color3.new(0.00784314, 0.454902, 1)
						visualizer.Transparency = 0.4
						visualizer.Size = Vector3.new(reach,reach,reach)
						visualizer.CFrame = handle.CFrame
						visualizer.CastShadow = false
						visualizer.Name = math.random()
					elseif config == "Sebs Config" then
						visualizer.Shape = Enum.PartType.Block
						visualizer.Material = Enum.Material.Asphalt
						visualizer.Color = Color3.new(0.105882, 0.745098, 0.0313725)
						visualizer.Transparency = 0.8
						visualizer.Size = Vector3.new(reach,reach,reach)
						visualizer.CFrame = handle.CFrame
						visualizer.CastShadow = false
						visualizer.Name = math.random()
					end
					if p then
						onHit(p,handle)
					else
						for _,v in pairs(handle:GetTouchingParts()) do
							onHit(v,handle)
						end
					end
				end
			end
		end
	end
end

if Reacheds == false then
  Reacheds = false
  end


end, false)

local ReachTypeChange
ReachTypeChange = addComboBox("Reach Shape: ", {"Sphere", "Block"}, function(selectedOption)
    if selectedOption == "Sphere" then
      reachType = Sphere
    end
    if selectedOption == "Block" then
      reachType = Block
    end
    -- Handle the selected option here
    -- You can perform any desired actions based on the selected option
end)


local hitboxadjust
hitboxadjust = addButton("Increase reach", function()
reachsize = reachsize + 1
hitboxez:WaitForChild("Name").Text = "Reach size: " .. reachsize
end)

local hitboxadjustno
hitboxadjustno = addButton("Decrease reach", function()
  if reachsize > 5 then
reachsize = reachsize - 1
end
hitboxez:WaitForChild("Name").Text = "Reach size: " .. reachsize
end)




Main:TweenPosition(
	UDim2.fromScale(0.5, 0.5),
	Enum.EasingDirection.In,
	Enum.EasingStyle.Quad,
	1, true, nil
)

task.wait(1.5)
Logo:TweenSizeAndPosition(
	UDim2.fromScale(0.175, 0.175),
	UDim2.fromScale(0.075, 0.15),
	Enum.EasingDirection.In,
	Enum.EasingStyle.Quad,
	1, true, nil
)

task.wait(0.25)
TweenService:Create(Intro, TweenInfo.new(1, Enum.EasingStyle.Linear, Enum.EasingDirection.In), {BackgroundTransparency = 1}):Play()